{"version":3,"sources":["components/header.js","components/table.js","utils/API.js","components/main.js","app.js","index.js"],"names":["Header","props","className","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","Table","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","axios","get","Main","search","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","replace","Date","push","getMonth","slice","getDate","getFullYear","join","API","then","res","data","results","catch","err","console","log","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40cc0d48.chunk.js","sourcesContent":["import React from \"react\";\nimport '../styles/header.css';\n\nconst Header = (props) => {\n    return (\n    <nav className=\"navbar content-right\">\n        <h1>Employee Directory</h1>\n        <form className=\"form-inline m-2 form-control-lg\" onSubmit={props.handleFormSubmit}>\n            <input\n                className=\"form-control\"\n                value={props.value}\n                name=\"search\"\n                onChange={props.handleInputChange}\n                type=\"search\"\n                placeholder=\"Search\"\n            />\n        </form>\n    </nav>\n    );\n};\n\nexport default Header;","import React from \"react\";\nimport '../styles/table.css'\n\nconst Table = (props) => {\n    return (\n        <table className=\"table table-striped table-sortable text-center\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Image</th>\n                    <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\n                        <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\n                            Name\n            </span>\n                    </th>\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\n                    </th>\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"email\")}>Email</span>\n                    </th>\n                    <th scope=\"col\">\n                        <span onClick={() => props.sortBy(\"dob\", \"date\")}>DOB</span>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.state.filteredEmployees.map((employee) => {\n                    const { first, last } = employee.name;\n                    const fullName = `${first} ${last}`;\n\n                    // Format date\n                    const dob = props.formatDate(employee.dob.date);\n\n                    return (\n                        <tr key={employee.login.uuid}>\n                            <td>\n                                <img src={employee.picture.thumbnail} alt={fullName} />\n                            </td>\n                            <td className=\"align-middle\">{fullName}</td>\n                            <td className=\"align-middle\">\n                                <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\n                            <td className=\"align-middle email\">\n                                <a href={`mailto:${employee.email}`}>{employee.email}</a>\n                            </td>\n                            <td className=\"align-middle\">{dob}</td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n};\n\nexport default Table;","import axios from \"axios\";\n\nconst URL = \"https://randomuser.me/api/?results=100&nat=us\"\n\nexport default {\n    getEmployees: function () {\n        return axios.get(URL);\n    }\n}","import React, { Component } from \"react\";\nimport Header from './header';\nimport Table from \"./table\";\nimport API from \"../utils/API\";\n\nclass Main extends Component {\n    state = {\n        search: \"\",\n        employees: [],\n        filteredEmployees: [],\n        sortDirections: this.initialSortDirections,\n    };\n\n    get initialSortDirections() {\n        return {\n            name: \"\",\n            phone: \"\",\n            email: \"\",\n            dob: \"\",\n        };\n    }\n\n    componentDidMount() {\n        API.getEmployees()\n            .then((res) =>\n                this.setState({\n                    employees: res.data.results,\n                    filteredEmployees: res.data.results,\n                })\n            )\n            .catch((err) => console.log(err));\n    }\n\n    handleInputChange = (event) => {\n        const value = event.target.value;\n        this.setState({ search: value });\n        this.filterEmployees(value.toLowerCase().trim());\n    };\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n    };\n\n    sortBy = (key, primary = 0, secondary = 0) => {\n        let sortedEmployees = this.state.filteredEmployees;\n        if (this.state.sortDirections[key]) {\n            this.setState({\n                filteredEmployees: sortedEmployees.reverse(),\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n                },\n            });\n        } else {\n            sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\n                a = a[key];\n                b = b[key];\n\n                if (primary) {\n                    if (secondary && a[primary] === b[primary]) {\n                        return a[secondary].localeCompare(b[secondary]);\n                    }\n                    return a[primary].localeCompare(b[primary]);\n                } else {\n                    return a.localeCompare(b);\n                }\n            });\n\n            this.setState({\n                filteredEmployees: sortedEmployees,\n                sortDirections: {\n                    ...this.initialSortDirections,\n                    [key]: \"asc\",\n                },\n            });\n        }\n    };\n\n    filterEmployees = (input) => {\n        if (input) {\n            this.setState({\n                filteredEmployees: this.state.employees.filter((employee) => {\n                    return (\n                        employee.name.first\n                            .toLowerCase()\n                            .concat(\" \", employee.name.last.toLowerCase())\n                            .includes(input) ||\n                        employee.phone.includes(input) ||\n                        employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\n                        employee.email.includes(input) ||\n                        this.formatDate(employee.dob.date).includes(input)\n                    );\n                }),\n            });\n        } else {\n            this.setState({ filteredEmployees: this.state.employees });\n        }\n    };\n\n    formatDate = (date) => {\n        date = new Date(date);\n        let dob = [];\n        dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n        dob.push((\"0\" + date.getDate()).slice(-2));\n        dob.push(date.getFullYear());\n\n        return dob.join(\"-\");\n    };\n\n    render() {\n        return (\n            <div>\n                <Header\n                    value={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                />\n                <div className=\"container mt-4\">\n                    <Table\n                        state={this.state}\n                        sortBy={this.sortBy}\n                        filterEmployees={this.filterEmployees}\n                        formatDate={this.formatDate}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\nexport default Main;","import React from 'react';\nimport Header from './components/header';\nimport Main from './components/main';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div>\n      {/* <Header /> */}\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}